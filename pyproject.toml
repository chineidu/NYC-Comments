[tool.poetry]
name = "Opinion Mine"
packages = [
    { include = "opinion_mine" },
]

version = "0.1.1"
description = "This project aims to mine and analyze opinions from NYT comments to gain insights into public sentiment."
authors = ["Chinedu Ezeofor <neidu@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "==3.10.8"
scikit-learn = "^1.5.1"
polars = "^1.4.1"
pandas = "^2.2.2"
numpy = "1.26"
scipy = "1.13.1"
matplotlib = "^3.9.1.post1"
typeguard = "^4.3.0"
rich = "^13.7.1"
mlxtend = "^0.23.1"
tqdm = "^4.66.5"
spacy = "^3.7.5"
pyarrow = "^17.0.0"
seaborn = "^0.13.2"
gensim = "^4.3.3"

[tool.poetry.group.dev.dependencies]
mypy = "^1.7.0"
mypy-extensions = "^1.0.0"
pre-commit = "^2.21.0"
ruff = "^0.1.4"
types-PyYAML = "^6.0.12.12"
black = "^24.8.0"
watermark = "^2.4.3"
nb-black-formatter = "^1.0.1"
jupyter = "^1.0.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.0"
pytest-cov = "== 4.0.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
show_error_context = true
ignore_missing_imports = true
warn_incomplete_stub = false
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = false
warn_unused_configs = true

[tool.ruff]
# Set the maximum line length to 100.
line-length = 100
indent-width = 4

# Assume Python 3.10
target-version = "py310"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr", ".direnv", ".dockerignore", ".eggs", ".env", ".git",
    ".gitignore", ".git-rewrite",  ".hg", ".mypy_cache", ".nox",
    ".pants.d", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
    "__pypackages__", "_build", "buck-out", "build", "dist", "env",
    "node_modules", "venv",
]

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set.
extend-select = ["E501"]
select = [
    "I001", "ANN201", "ANN202", "S107", "PIE796", "T201", "PYI009",
    "PYI012", "PYI026", "RET505", "SIM115", "F401",
    ]
ignore = ["E741", "PT011", "PLR1722", "D419", "D101", "D100", "D107", "ANN401", "PLC0414"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Pytest
[tool.pytest.ini_options]
addopts = "--strict-markers" # Ensure that the markers are defined
markers = [
            "integration: Run the integration tests.",
            "differential: Run the integration tests."
            ]
